[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name            = "ai-memory"
version         = "0.8.0"
description     = "Self-hosted long-term memory backend built with FastAPI, FAISS and SQLite."
readme          = "README.md"
requires-python = ">=3.11"
license         = { text = "Apache-2.0" }
authors         = [
  { name = "Ingver", email = "ingver@example.com" },
]
keywords        = ["memory", "FAISS", "vector", "FastAPI", "SQLite"]

dependencies = [
  # Web / API
  "fastapi>=0.111",
  "uvicorn[standard]>=0.29",

  # Config & validation
  "pydantic>=2.5",
  "pydantic-settings>=2.2",

  # Storage / Vector
  "aiosqlite>=0.19",
  "faiss-cpu>=1.8",

  # Security
  "cryptography>=42.0",
  "python-multipart>=0.0.9",

  # Observability
  "prometheus-client>=0.20",
  "opentelemetry-api>=1.23",
  "opentelemetry-sdk>=1.23",
  "opentelemetry-instrumentation-fastapi>=0.45",

  # HTTP client (CLI / tests)
  "httpx>=0.27",
]

[project.optional-dependencies]
cli = [
  "typer>=0.12",
  "rich>=13.7",
]

dev = [
  "ruff>=0.4",
  "mypy>=1.10",
  "pytest>=8.2",
  "pytest-asyncio>=0.23",
  "coverage>=7.5",

  # Config file parsers for legacy interpreters
  "tomli>=2.0; python_version<'3.11'",
  "pyyaml>=6.0",
]

[project.scripts]
ai-mem = "memory_system.cli:app"

[tool.setuptools.packages.find]
where   = ["."]
exclude = ["tests*", "examples*"]

[tool.ruff]
target-version = "py311"
line-length    = 100
select         = ["E", "F", "I", "UP", "B", "C90"]   # style, bugs, isort, upgrades, best-practices
ignore         = ["E501"]                            # handled by black

[tool.mypy]
python_version        = "3.11"
strict                = true
ignore_missing_imports = true
show_error_codes      = true
